--!
--! Copyright (C) 2017-2024 N7 Space sp. z o. o.
--! Contact: https://n7space.com
--!
--! This file is part of ASN.1/ACN PUS-C Components Library.
--!
--! Library was developed under a programme and funded by
--! European Space Agency.
--!
--! This Library is free software: you can redistribute it and/or modify
--! it under the terms of the GNU General Public License as published by
--! the Free Software Foundation, either version 3 of the License, or
--! (at your option) any later version.
--!
--! This Library is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU General Public License for more details.
--!
--! You should have received a copy of the GNU General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.
--!

ParameterMonitoringDefinition DEFINITIONS ::= BEGIN

ParameterMonitoringDefinition []
{
    pmon-ID [],
    monitoredParameter-ID [],
    checkValidityCondition [],
    monitoringInterval [],
    repetitionNumber [],
    checkType PMON.PMON-CheckType [],
    checkTypeCriteria <checkType> []
}

TC-12-7-ParameterMonitoringDefinition []
{
    pmon-ID [],
    monitoredParameter-ID [],
    checkValidityCondition [],
    monitoringInterval [],
    repetitionNumber [],
    checkType PMON.PMON-CheckType [],
    checkTypeCriteria <checkType> []
}

CheckTypeCriteria <PMON.PMON-CheckType: checkType> [determinant checkType]
{
    expectedValueChecking [],
    limitChecking [],
    deltaChecking []
}

EventDefinitionSpare []

ExpectedValueCheckingCriteria []
{
    mask [],
    spare [],
    expectedValue [],
    eventDefinition-ID []
}

LimitCheckingCriteria []
{
    lowLimit [],
    lowLimitEventDefinition-ID [],
    highLimit [],
    highLimitEventDefinition []
}

DeltaCheckingCriteria []
{
    lowDeltaThreshold [],
    lowThresholdEventDefinition-ID [],
    highDeltaThreshold [],
    highThresholdEventDefinition-ID [],
    numberOFConstructiveDeltaValues []
}

END

/*
ParameterMonitoringDefinition DEFINITIONS ::= BEGIN

ParameterMonitoringDefinition []
{
    pmon-ID [],
    monitoredParameter-ID Parameter.Parameter-ID [],
    checkValidityCondition [],
    monitoringInterval [],
    repetitionNumber [],
    checkType PMON.PMON-CheckType [],
    checkTypeCriteria <monitoredParameter-ID, checkType> []
}

CheckTypeCriteria <Parameter.Parameter-ID: parameter, PMON.PMON-CheckType: checkType> [determinant checkType]
{
    expectedValueChecking <parameter> [],
    limitChecking <parameter> [],
    deltaChecking <parameter> []
}

EventDefinitionSpare []

ExpectedValueCheckingCriteria <Parameter.Parameter-ID: param> []
{
    mask <param> [],
    spare [],
    expectedValue <param> [],
    eventDefinition-ID []
}

LimitCheckingCriteria <Parameter.Parameter-ID: param> []
{
    lowLimit <param> [],
    lowLimitEventDefinition-ID [],
    highLimit <param> [],
    highLimitEventDefinition []
}

DeltaCheckingCriteria <Parameter.Parameter-ID: param> []
{
    lowDeltaThreshold <param> [],
    lowThresholdEventDefinition-ID [],
    highDeltaThreshold <param> [],
    highThresholdEventDefinition-ID [],
    numberOFConstructiveDeltaValues []
}

END

*/


